-- Decompiled with the Synapse X Luau decompiler.

workspace.Gravity = 196.2;
local l__Parent__1 = script.Parent;
local l__Busy__2 = l__Parent__1:WaitForChild("Busy");
local l__Stun__3 = l__Parent__1:WaitForChild("Stun");
local l__Humanoid__4 = l__Parent__1:WaitForChild("Humanoid");
local l__UserInputService__5 = game:GetService("UserInputService");
local l__HumanoidRootPart__1 = l__Parent__1:WaitForChild("HumanoidRootPart");
task.spawn(function()
	local l__Died__6 = l__HumanoidRootPart__1:WaitForChild("Died", 10);
	if l__Died__6 then
		l__Died__6.Volume = 0;
	end;
end);
local l__LocalPlayer__7 = game.Players.LocalPlayer;
local l__Data__8 = l__LocalPlayer__7:WaitForChild("Data");
local l__DevilFruit__9 = l__Data__8:WaitForChild("DevilFruit");
local l__Race__10 = l__Data__8:WaitForChild("Race");
_G.Swimming = false;
local u2 = 0;
local u3 = false;
l__UserInputService__5.JumpRequest:Connect(function()
	if tick() - u2 < 0.5 or -l__HumanoidRootPart__1.Size.Y - 0.5 < l__HumanoidRootPart__1.Position.Y then
		return;
	end;
	u3 = true;
	u2 = tick();
end);
l__Humanoid__4:GetPropertyChangedSignal("Jump"):Connect(function()
	if l__HumanoidRootPart__1:FindFirstChild("BodyPosition") then
		l__Humanoid__4.Jump = false;
	end;
end);
local v11 = workspace.Map:FindFirstChild("WaterBase-Plane");
if not v11 then
	v11 = Instance.new("Part");
	v11.Size = Vector3.new(1000, 80, 1000);
	v11.CFrame = CFrame.new(0, -10000, 0);
	v11.Transparency = 1;
	v11.Anchored = true;
	v11.CanCollide = true;
	v11.CanTouch = false;
	v11.Name = "WaterBase-Plane";
	v11.Parent = workspace.Map;
end;
local v12 = require(game.ReplicatedStorage.Effect);
local v13 = v12.new("Ice1.Waterwalk", true);
local v14 = v12.new("Shared.MagmaWalk", true);
local v15 = {
	["Ice-Ice"] = true, 
	["Magma-Magma"] = true
};
local v16 = require(game.ReplicatedStorage.Util);
local v17 = 0;
local v18 = 0;
local v19 = 0;
local v20 = 0;
local v21 = 1;
local v22 = _G.Swimming;
local v23 = tick();
local v24 = 0;
local v25 = v16.Anims:Get(l__Parent__1, "FallLand");
local v26 = Vector3.new(0, 10.069, 0);
while true do
	local v27 = nil;
	if not game:GetService("RunService").RenderStepped:Wait() then
		break;
	end;
	if l__Humanoid__4.Health <= 0 then
		break;
	end;
	local v28 = tick();
	local v29 = v28 - v23;
	local v30 = v17 + v29;
	local v31 = l__Race__10:FindFirstChild("Evolved") and not _G.InSafeZone;
	if _G.Swimming and u3 then
		u3 = false;
		l__Humanoid__4.WalkSpeed = 16;
		initialSplash = false;
		_G.Swimming = false;
		v20 = v28;
		l__HumanoidRootPart__1.Velocity = l__HumanoidRootPart__1.Velocity + Vector3.new(0, l__Humanoid__4.JumpPower * 1.65, 0);
		l__HumanoidRootPart__1.CFrame = l__HumanoidRootPart__1.CFrame + Vector3.new(0, 0.25, 0);
		v12.new("Water.Splash"):replicate({
			CFrame = CFrame.new(l__HumanoidRootPart__1.Position.X, -4, l__HumanoidRootPart__1.Position.Z), 
			Scale = l__HumanoidRootPart__1.Size.Y * 1.5, 
			Duration = 0.8
		});
	elseif v28 - u2 > 0.5 then
		local v32 = v15[l__DevilFruit__9.Value];
		local v33 = nil;
		local v34 = v26;
		if v32 then
			local v35, v36 = v16.Ray(l__HumanoidRootPart__1.Position + ((l__HumanoidRootPart__1.Velocity * Vector3.new(1, 0, 1)).magnitude > 0.5 and (l__HumanoidRootPart__1.Velocity * Vector3.new(1, 0, 1)).unit * v29 * 3 or l__HumanoidRootPart__1.CFrame.LookVector * 2), Vector3.new(0, -25, 0), { workspace.Characters, workspace.Enemies });
			v33 = v35;
			v34 = v36;
		end;
		if v32 and l__HumanoidRootPart__1.Position.Y < -l__HumanoidRootPart__1.Size.Y + 11 and l__HumanoidRootPart__1.Position.Y > -1 and l__Parent__1.Energy.Value >= 4 and (v33 == nil or v34.Y < -4) then
			local v37 = l__LocalPlayer__7.Backpack:FindFirstChild(l__DevilFruit__9.Value) or l__LocalPlayer__7.Character:FindFirstChild(l__DevilFruit__9.Value);
			if v37 then
				local l__AwakenedMoves__38 = v37:FindFirstChild("AwakenedMoves");
				local v39 = nil;
				if l__AwakenedMoves__38 then
					local v40 = 0;
					local v41 = { "Z", "X", "C", "V", "F", l__AwakenedMoves__38:FindFirstChild("TAP") or "TAP" };
					local v42 = {};
					for v43, v44 in pairs(v41) do
						if l__AwakenedMoves__38:FindFirstChild(v44) then
							v42[v44] = true;
							v40 = v40 + 1;
						end;
					end;
					if v40 > 0 then
						v39 = true;
					end;
					if #v41 <= v40 then

					end;
					local l__F__45 = v42.F;
				end;
				if l__DevilFruit__9.Value == "Ice-Ice" then
					game.ReplicatedStorage.Remotes.CommE:FireServer("IceWalk", l__HumanoidRootPart__1.CFrame);
					v13:replicate({
						CFrame = CFrame.new(l__HumanoidRootPart__1.Position)
					});
				elseif l__DevilFruit__9.Value == "Magma-Magma" and v39 then
					game.ReplicatedStorage.Remotes.CommE:FireServer("MagmaWalk", l__HumanoidRootPart__1.CFrame);
					v14:replicate({
						Type = "AwakenedBlob", 
						Position = l__HumanoidRootPart__1.CFrame.p, 
						Duration = l__Parent__1.Busy.Value or 0.6
					});
				end;
			end;
		elseif l__HumanoidRootPart__1.Position.Y < -4 and v28 - v20 > 0.5 then
			if l__Race__10.Value == "Fishman" then
				if v31 then
					local v46 = 100;
				else
					v46 = 60;
				end;
				l__Humanoid__4.WalkSpeed = v46;
			elseif l__DevilFruit__9.Value ~= "" then
				if v31 then
					local v47 = 20;
				else
					v47 = 14;
				end;
				l__Humanoid__4.WalkSpeed = v47;
			end;
			local v48 = l__Humanoid__4.MoveDirection * Vector3.new(1, 0, 1);
			if v48.Magnitude > 0.01 then
				v48 = v48.unit;
			end;
			l__HumanoidRootPart__1.Velocity = v48 * l__Humanoid__4.WalkSpeed;
			l__HumanoidRootPart__1.CFrame = CFrame.new(l__HumanoidRootPart__1.Position.X, -4.25, l__HumanoidRootPart__1.Position.Z) * (l__HumanoidRootPart__1.CFrame - l__HumanoidRootPart__1.CFrame.p);
			if not initialSplash then
				v12.new("Water.AcuteSplash"):replicate({
					CFrame = CFrame.new(l__HumanoidRootPart__1.Position.X, -4, l__HumanoidRootPart__1.Position.Z), 
					Scale = l__HumanoidRootPart__1.Size.Y, 
					Duration = 0.8
				});
				initialSplash = true;
			end;
			_G.Swimming = true;
		elseif _G.Swimming and l__HumanoidRootPart__1.Position.Y > -3.75 then
			if not u3 then
				initialSplash = false;
			end;
			l__Humanoid__4.WalkSpeed = 16;
			_G.Swimming = false;
			v20 = v28;
		end;
	end;
	local v49 = 0;
	local v50 = 0;
	if l__Race__10.Value == "Ghoul" then
		if v31 then
			local v51 = 1.4;
		else
			v51 = 1.2;
		end;
		local v52 = v51;
		if game.Lighting.ClockTime > 18 or game.Lighting.ClockTime < 6 or l__Parent__1:FindFirstChild("RaceTransformed") and l__Parent__1.RaceTransformed.Value and l__Race__10:FindFirstChild("B") and l__Race__10.B.Value >= 1 then
			v52 = v52 * 1.25;
		end;
	elseif l__Race__10.Value == "Mink" then
		if v31 then
			local v53 = 1.95;
		else
			v53 = 1.45;
		end;
		v52 = v53;
	else
		if v31 then
			local v54 = 1.325;
		else
			v54 = 1;
		end;
		v52 = v54;
	end;
	if l__Parent__1:GetAttribute("SpeedMultiplier") then
		v49 = v49 + l__Parent__1:GetAttribute("SpeedMultiplier") - 1;
	end;
	if l__Parent__1:GetAttribute("FishmanDebuff1b") then
		local v55 = l__Parent__1:GetAttribute("FishmanDebuff1a");
		if workspace:GetServerTimeNow() < l__Parent__1:GetAttribute("FishmanDebuff1b") then
			v50 = -2 * v55;
		end;
	end;
	if l__Parent__1:GetAttribute("FishmanDebuff2b") then
		local v56 = l__Parent__1:GetAttribute("FishmanDebuff2a");
		if workspace:GetServerTimeNow() < l__Parent__1:GetAttribute("FishmanDebuff2b") then
			v50 = -4 * v56;
		end;
	end;
	if l__Parent__1:FindFirstChild("LeopardRig") then
		v49 = v49 + 0.75;
	end;
	if l__Parent__1:FindFirstChild("LeopardBoost") then
		v49 = v49 + 1.5;
	end;
	if l__HumanoidRootPart__1:FindFirstChild("Agility") then
		v49 = v49 + 2;
	elseif l__HumanoidRootPart__1:FindFirstChild("Heightened Senses") then
		v49 = v49 + 1.15;
	end;
	v27 = 36 * (l__HumanoidRootPart__1:FindFirstChild("Buddha") and 1.15 + v49 * 0.25 or v52 + v49) + v50;
	if _G.Running then
		local v57 = v27;
	else
		v57 = math.min(v27, 18);
	end;
	if (_G.Swimming == false and l__Busy__2.Value == false or v57 < l__Humanoid__4.WalkSpeed) and not l__Parent__1:GetAttribute("IgnoreWalkSpeed") then
		l__Humanoid__4.WalkSpeed = v57;
	end;
	if _G.Swimming then
		if v22 ~= _G.Swimming then
			v22 = _G.Swimming;
			l__Humanoid__4:SetStateEnabled("Running", false);
			l__Humanoid__4:SetStateEnabled("RunningNoPhysics", false);
			l__Humanoid__4:SetStateEnabled("Climbing", false);
			l__Humanoid__4:SetStateEnabled("GettingUp", false);
			workspace.Gravity = 1.962;
			l__Humanoid__4:SetStateEnabled("Swimming", true);
		end;
		l__Humanoid__4:ChangeState("Swimming");
		if (l__HumanoidRootPart__1.Velocity * Vector3.new(1, 0, 1)).Magnitude > 0.2 then
			if v28 - v18 > 0.45 then
				if v21 == 1 then
					local v58 = 1;
				else
					v58 = -1;
				end;
				local v59 = v16.Misc.AlignCFrame(CFrame.new(Vector3.new(), l__Humanoid__4.MoveDirection) + l__HumanoidRootPart__1.Position) * CFrame.new(v58 * l__HumanoidRootPart__1.Size.X * 1.3, 0, 0) * CFrame.new(0, 0, -(l__HumanoidRootPart__1.Velocity * Vector3.new(1, 0, 1)).Magnitude * 2 * v29);
				v12.new("Water.Swim.Splash"):replicate({
					CFrame = v59 - v59.p + (v59.p * Vector3.new(1, 0, 1) + Vector3.new(0, -4, 0)), 
					Scale = l__HumanoidRootPart__1.Size.X, 
					Duration = 0.9
				});
				v18 = v28;
				v21 = v21 % 2 + 1;
			end;
		elseif v28 - v19 > 1.5 then
			v12.new("Water.Swim.Idle"):replicate({
				CFrame = CFrame.new((Vector3.new(l__HumanoidRootPart__1.Position.X, -4, l__HumanoidRootPart__1.Position.Z))), 
				Scale = l__HumanoidRootPart__1.Size.Y, 
				Duration = 1.65
			});
			v19 = v28;
		end;
	elseif not _G.Swimming and v22 ~= _G.Swimming then
		v22 = _G.Swimming;
		l__Humanoid__4:SetStateEnabled("Running", true);
		l__Humanoid__4:SetStateEnabled("RunningNoPhysics", true);
		l__Humanoid__4:SetStateEnabled("Climbing", true);
		l__Humanoid__4:SetStateEnabled("GettingUp", true);
		l__Humanoid__4:SetStateEnabled("Swimming", false);
		workspace.Gravity = 196.2;
	end;
	local l__CurrentCamera__60 = workspace.CurrentCamera;
	if l__CurrentCamera__60 and l__CurrentCamera__60.CFrame.Y < -4 then
		if v11.Parent ~= workspace._WorldOrigin then
			v11.Parent = workspace._WorldOrigin;
			v11.CFrame = CFrame.new(l__HumanoidRootPart__1.Position.X, -60, l__HumanoidRootPart__1.Position.Z);
		end;
	elseif v11.Parent ~= workspace.Map then
		v11.Parent = workspace.Map;
		v11.CFrame = CFrame.new(l__HumanoidRootPart__1.Position.X, -60, l__HumanoidRootPart__1.Position.Z);
	end;
	if v30 >= 0.3 then
		v30 = 0;
		v11.CFrame = CFrame.new(l__HumanoidRootPart__1.Position.X, -60, l__HumanoidRootPart__1.Position.Z);
		local v61, v62 = v16.Ray(l__HumanoidRootPart__1.Position, Vector3.new(0, -800, 0), { workspace.Characters, workspace.Enemies });
		local v63 = (l__HumanoidRootPart__1.Position - v62).Magnitude / 800;
		if v63 > 0.6 then
			local v64 = 196.2 * (1 + (v63 - 0.6) / 0.4);
			if workspace.Gravity < v64 then
				workspace.Gravity = workspace.Gravity + (v64 - workspace.Gravity) * 0.03;
			else
				workspace.Gravity = v64;
			end;
		else
			workspace.Gravity = 196.2;
		end;
	end;
	if not v25.IsPlaying then
		if v24 < -70 and v24 < l__HumanoidRootPart__1.Velocity.Y and l__Busy__2.Value == false and l__Stun__3.Value <= 0 and l__Humanoid__4.FloorMaterial ~= Enum.Material.Air then
			v25:Play();
			local v65, v66, v67 = v16.Ray(l__HumanoidRootPart__1.Position, Vector3.new(0, -l__HumanoidRootPart__1.Size.Y * 3, 0), { workspace.Characters, workspace.Enemies });
			if v65 and v65.Transparency == 0 then
				local v68 = game.ReplicatedStorage.FX.Attachments.GroundLand:Clone();
				v68.dust.Color = ColorSequence.new(v65.Color);
				v68.rocks.Color = ColorSequence.new(v65.Color);
				v68.Position = v66;
				v68.Parent = workspace.Terrain;
				v68.rocks:Emit(6);
				v68.dust:Emit(9);
				v16.Debris:AddItem(v68, 1.5);
			end;
		end;
	elseif l__Humanoid__4.FloorMaterial == Enum.Material.Air then
		v25:Stop();
	end;
	v24 = l__HumanoidRootPart__1.Velocity.Y;
	v23 = v28;
end;
workspace.Gravity = 196.2;
