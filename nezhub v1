getgenv().AutoSkillF = false
getgenv().AutoSkillE = false
getgenv().AutoSkillR = false
getgenv().AutoSkillG = false
getgenv().AutoSkillQ = false
getgenv().walkspeed1 = false
getgenv().TweenTp = false



------------------------------------------------------------------------------------------------variables/gui

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("BloxFruit") -- Creates the window

local w1 = library:CreateWindow("misc") -- Creates the window

local a = w:CreateFolder("Teleports") -- Creates the folder(U will put here your buttons,etc)

local b = w:CreateFolder("Farming")

local c = w1:CreateFolder("Speed")

local d = w:CreateFolder("Auto Skill")

a:Button("Button",function()
    bypass_teleport(v)
end)
-------------------------------------------------------------------------------------------------------------------tween
b:Toggle("TweenTp",function(bool)
    getgenv().TweenTp = bool
    print(shared.toggle)
	if bool ==true then
		bypass_teleport()
	end
end)

-------------------------------------------------------------------------------------------------------------------as
d:Toggle("Q",function(bool)
    getgenv().AutoSkillQ = bool
    while AutoSkillQ == true do
        Autoskill5()
    end
end)

d:Toggle("E",function(bool)
    getgenv().AutoSkillE = bool
    while AutoSkillE == true do
        Autoskill2()
    end
end)

d:Toggle("R",function(bool)
    getgenv().AutoSkillR = bool
    while AutoSkillR == true do
        Autoskill3()
    end
end)

d:Toggle("G",function(bool)
    getgenv().AutoSkillG = bool
    while AutoSkillG == true do
        Autoskill4()
    end
end)

d:Toggle("F",function(bool)
    getgenv().AutoSkillF = bool
    while AutoSkillF == true do
        Autoskill1()
    end
end)

---------------------------------------------------------------------------------------------- walk

c:Slider("Slider",{
    min = 10; -- min value of the slider
    max = 200; -- max value of the slider
    precise = true; -- max 2 decimals
},function(valv)
    if walkspeed1 == true then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = valv
    print(valv)
    end
end)

c:Toggle("walkspeed",function(bool)
    getgenv().walkspeed1 = bool
    print(shared.toggle)
end)



-------------------------------------------------------

b:Slider("Slider",{
    min = 10; -- min value of the slider
    max = 50; -- max value of the slider
    precise = true; -- max 2 decimals
},function(value)
    print(value)
end)

b:Dropdown("Dropdown",{"A","B","C"},true,function(mob) --true/false, replaces the current title "Dropdown" with the option that t
    print(mob)
end)

b:Bind("Bind",Enum.KeyCode.C,function() --Default bind
    print("Yes")
end)

b:DestroyGui()





--------------------------------------------------------------------------------------------------------------------------------------------------autoskill
function AutoSkill1()
    while AutoSkillF == true do
        local args = {
            [1] = "Devil Fruit",
            [2] = "F",
            [3] = CFrame.new(-1099.0260009765625, -63.46984100341797, 297.155517578125) * CFrame.Angles(-1.5260426998138428, 0.1848909854888916, 1.3318488597869873),
            [4] = workspace.Map.Islands:FindFirstChild("Ice Island").Model:FindFirstChild("Ice island").Part,
            [5] = 5
        }

        game:GetService("ReplicatedStorage").Remotes.requestAbility:FireServer(unpack(args))
        task.wait(4)
    end
end

function AutoSkill2()
    while AutoSkillE == true do
        local args = {
            [1] = "Devil Fruit",
            [2] = "E",
            [5] = 5
        }
        
        game:GetService("ReplicatedStorage").Remotes.requestAbility:FireServer(unpack(args))
        task.wait(4)
    end
end

function AutoSkill3()
    while AutoSkillR == true do
        local args = {
            [1] = "Devil Fruit",
            [2] = "R",
            [5] = 5
        }
        
        game:GetService("ReplicatedStorage").Remotes.requestAbility:FireServer(unpack(args))
        task.wait(4)
    end
end

function AutoSkill4()
    while AutoSkillG == true do
        local args = {
            [1] = "Devil Fruit",
            [2] = "G",
            [5] = 5
        }
        
        game:GetService("ReplicatedStorage").Remotes.requestAbility:FireServer(unpack(args))
        task.wait(4)
    end
end

function AutoSkill5()
    while AutoSkillQ == true do
        local args = {
            [1] = "Devil Fruit",
            [2] = "Q",
            [3] = CFrame.new(-1201.4053955078125, -63.46984100341797, 365.0788879394531) * CFrame.Angles(-2.9639511108398438, 0.4187498092651367, 3.0687201023101807),
            [4] = workspace.Map.Islands:FindFirstChild("Ice Island").Model:FindFirstChild("Ice island").Part,
            [5] = 5
        }
        
        game:GetService("ReplicatedStorage").Remotes.requestAbility:FireServer(unpack(args))
        task.wait(4)
    end
end
        
-------------------------------------------------------------------------------------------------------------------tween
function tweem()
if TweenTp == true then
    local teleport_table = {
        location1 = Vector3.new(394, -45, -181), -- your desired position
        location2 = Vector3.new(394, -45, -181)  -- your desired position
    }
    
    local tween_s = game:GetService('TweenService')
    local tweeninfo = TweenInfo.new(1,Enum.EasingStyle.Linear)
    
    local lp = game.Players.LocalPlayer
    
    function bypass_teleport(v)
        if lp.Character and 
        lp.Character:FindFirstChild('HumanoidRootPart') then
            local cf = CFrame.new(v)
            local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
            a:Play()
            -- a.Completed:Wait()
            end-- print('Teleporting Done!')
        end
    end
end

---------------------------------------------------------------------------------------------------------------------- fast attack/inf range
local CombatFramework = require(game:GetService("Players").LocalPlayer.PlayerScripts.CombatFramework)
local Camera = require(game.ReplicatedStorage.Util.CameraShaker)
Camera:Stop()
coroutine.wrap(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getupvalues(CombatFramework)[2]['activeController'].timeToNextAttack then
            getupvalues(CombatFramework)[2]['activeController'].timeToNextAttack = 0
            getupvalues(CombatFramework)[2]['activeController'].hitboxMagnitude = 25
            getupvalues(CombatFramework)[2]['activeController']:attack()
        end
    end)
end)()
